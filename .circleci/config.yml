version: 2
jobs:
  generate_cache:
    machine: true
    working_directory: ~/acoustic-keylogger-research
    steps:
      - checkout
      - restore_cache:
          keys: 
            - >
                docker-compose-
                {{ .Branch  }}-
                {{ checksum "docker-compose.yml" }}-
                {{ checksum "Dockerfile" }}-
                {{ checksum "requirements.txt" }}
            - v1-dependencies-
          paths: ~/cache/images.tar
      - run:
          command: |
            set +o pipefail
            docker load -i ~/cache/images.tar | true
      - run: docker-compose pull
      - run: docker-compose build
      - run:
          command: |
            mkdir -p ~/cache
            docker save $(docker images -q) -o ~/cache/images.tar
      - save_cache:
          key: >
                docker-compose-
                {{ .Branch  }}-
                {{ checksum "docker-compose.yml" }}-
                {{ checksum "Dockerfile" }}-
                {{ checksum "requirements.txt" }}
          paths: ~/cache/images.tar

  testing:
    machine: true
    working_directory: ~/acoustic-keylogger-research
    steps:
      - checkout
      - restore_cache:
          keys:
            - >
                docker-compose-
                {{ .Branch  }}-
                {{ checksum "docker-compose.yml" }}-
                {{ checksum "Dockerfile" }}-
                {{ checksum "requirements.txt" }}
            - v1-dependencies-
          paths: ~/cache/images.tar
      - run:
          command: |
            set +o pipefail
            docker load -i ~/cache/images.tar | true
      - run: 
          name: Pull Docker Compose
          command: docker-compose pull
      - run: 
          name: Build Docker Compose
          command: docker-compose build
      - run:
          name: Spin up Docker Compose
          command: docker-compose up -d
      - run:
          name: Run tests
          command: docker-compose run env pytest -q tests

workflows:
  version: 2
  build:
    jobs:
      - generate_cache
      - testing:
          requires:
            - generate_cache
